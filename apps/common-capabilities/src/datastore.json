[
    {
        "ServiceName": "Calendar Service",
        "Description": "Streamlines scheduling by providing detailed date and event information, effortlessly managing time zones, and facilitating seamless communication with features like event creation, attendee management, and automatic timezone conversion.",
        "Keywords": "",
        "FunctionalGroup": "Workflow and Process Automation",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://govalta.github.io/adsp-monorepo/services/calendar-service.html",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 1
    },
    {
        "ServiceName": "Configuration Service",
        "Description": "Ensures persistent and schema-compliant configuration storage, using a specialized JSON document store. Efficient organization and optional schemas validate write operations for consistent and accurate data.",
        "Keywords": "",
        "FunctionalGroup": "Data Management",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://govalta.github.io/adsp-monorepo/services/configuration-service.html",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 2
    },
    {
        "ServiceName": "Directory Service",
        "Description": "Streamlines service discovery with the Directory Service, a central register of services and APIs. Use the Directory API to effortlessly find service URLs, ensuring easy accessibility for applications. Users can contribute by adding their entries, enhancing discoverability, and creating a comprehensive repository for seamless service and API discovery.",
        "Keywords": "",
        "FunctionalGroup": "Workflow and Process Automation",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://govalta.github.io/adsp-monorepo/services/directory-service.html",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 3
    },
    {
        "ServiceName": "Event Service",
        "Description": "Allows tenant applications to send domain events for enhanced capabilities and side effects. Record these events in a log for traceability, extending functionality beyond domain services and fostering system versatility. Product teams can leverage events for specific functionalities, promoting flexibility and customization within their applications.",
        "Keywords": "",
        "FunctionalGroup": "Undefined",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://govalta.github.io/adsp-monorepo/services/event-service.html",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 4
    },
    {
        "ServiceName": "File Service",
        "Description": "Facilitates easy file uploading and downloading with secure, organized storage in individual spaces. Utilizes Microsoft's Azure Blob Storage for scalable and secure storage, ensuring reliability. Includes virus scanning, access control, metadata association, and efficient file retrieval through various APIs, stream downloads, and quick search functionality.",
        "Keywords": "",
        "FunctionalGroup": "File Handling and Storage",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://govalta.github.io/adsp-monorepo/services/file-service.html",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 5
    },
    {
        "ServiceName": "PDF Service",
        "Description": "Facilitates personalized PDF creation for end users through the PDF Service. Utilize template editor and APIs for seamless generation by combining templates with data. Author templates efficiently via the PDF Service Webapp, initiate asynchronous PDF generation jobs, check real-time job status, and access completed PDFs via File Service APIs. Customize retention with user-defined file types in the File Service for specified file type IDs in the PDF generation API.",
        "Keywords": "",
        "FunctionalGroup": "Document Processing",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://govalta.github.io/adsp-monorepo/services/pdf-service.html",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 6
    },
    {
        "ServiceName": "Push Service",
        "Description": "Gateway for push mode integrations such as flat file uploads to SFTP, web sockets, etc. (i.e. Push mode counterpart to API gateway)",
        "Keywords": "API",
        "FunctionalGroup": "Undefined",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://govalta.github.io/adsp-monorepo/services/push-service.html",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 7
    },
    {
        "ServiceName": "Status Service",
        "Description": "Streamlines application downtime monitoring for standalone services, ensuring easy tracking of valuable functionalities independently provided to end users.",
        "Keywords": "",
        "FunctionalGroup": "Service Monitoring and Support",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://status.adsp.alberta.ca/",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 8
    },
    {
        "ServiceName": "Notification Service",
        "Description": "Automates notifications by generating and sending messages based on domain events from the Event Service. Offers versatile messaging with defined notification types and efficient management through subscriptions and subscribers. Users can subscribe to specific notification types, ensuring they receive relevant updates.",
        "Keywords": "messaging",
        "FunctionalGroup": "Notifications and Communication",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://subscription.adsp.alberta.ca/",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 9
    },
    {
        "ServiceName": "Tenant Management Service",
        "Description": "Centralized management for provisioning tenant spaces across platform services",
        "Keywords": "",
        "FunctionalGroup": "User Access and Identity",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://adsp.alberta.ca/",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 10
    },
    {
        "ServiceName": "Access Service",
        "Description": "Streamlines the sign-in process by brokering with authentication providers (MADI, GoA AD), managing user sessions, and configuring user access for program self-administration. Requires minimal effort and setup, eliminating the need to manage user storage or authentication, making it ready for immediate use without additional configuration.",
        "Keywords": "",
        "FunctionalGroup": "User Access and Identity",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://access.alberta.ca/",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 11
    },
    {
        "ServiceName": "Values Service",
        "Description": "Time series store for events and metrics.",
        "Keywords": "metrics",
        "FunctionalGroup": "Undefined",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "https://govalta.github.io/adsp-monorepo/services/value-service.html",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 12
    },
    {
        "ServiceName": "Script Service",
        "Description": "Enables execution of configured Lua scripts with the Script Service. Capture application logic in configuration, configure and execute scripts via the Script Service API for benefits calculations or other functions. Implement policy changes through easy configuration updates, promoting flexibility and efficiency without the need for code changes.",
        "Keywords": "",
        "FunctionalGroup": "Workflow and Process Automation",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid support",
        "Documentation": "",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "Product teams can get started by accessing an existing tenant or creating a new tenant. Each tenant represents a zone of administrative control and generally products within a common service area can share a tenant.",
        "Comments": "",
        "id": 13
    },
    {
        "ServiceName": "Form Service",
        "Description": "Offers temporary storage for draft forms with verify code-based access, allowing applicants to submit forms without a user account. The Form Service also includes events and a notification type to keep applicants updated on the status of their submissions.",
        "Keywords": "Storage",
        "FunctionalGroup": "Undefined",
        "Provider": "Alberta Digital Service Platform (ADSP)",
        "Environment": "",
        "Language": "",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "Slack: Digital Design and Delivery #adsp-connection\nEmail: adsp@gov.ab.ca ",
        "Prerequisites ": "",
        "Comments": "",
        "id": 14
    },
    {
        "ServiceName": "   Get Access (CCA)",
        "Description": "Allows child care operators to request access to services provided by Children's Services. Requests are approved by authorized GOA staff.",
        "Keywords": "security",
        "FunctionalGroup": "Other Function",
        "Provider": "Children's Services Platform ",
        "Environment": "",
        "Language": "",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "",
        "id": 15
    },
    {
        "ServiceName": "GOA User Management",
        "Description": "Allows GOA staff to manage the access of other GOA staff to the internal applications developed by Children's Services.",
        "Keywords": "",
        "FunctionalGroup": "User Access and Identity",
        "Provider": "Children's Services Platform ",
        "Environment": "",
        "Language": "",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "",
        "id": 16
    },
    {
        "ServiceName": "Get Access (CCA) API",
        "Description": " An internal API that allows applications developed by Children's Services to get information about users, roles, and groups from the CCDS Keycloak realm.",
        "Keywords": "",
        "FunctionalGroup": "User Access and Identity",
        "Provider": "Children's Services Platform ",
        "Environment": "",
        "Language": "",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "",
        "id": 17
    },
    {
        "ServiceName": "CCDS Angular Components",
        "Description": "An Angular library that provides UI components and shared code for Angular apps in Children's Services, including authentication and authorization through the CCDS Keycloak realm.",
        "Keywords": "",
        "FunctionalGroup": "Data Management",
        "Provider": "Children's Services Platform ",
        "Environment": "",
        "Language": "Angular",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Beta",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "",
        "id": 18
    },
    {
        "ServiceName": "CCDS React Components",
        "Description": "A React library that provides UI components and shared code for React apps in Children's Services, including authentication and authorization through the CCDS Keycloak realm.",
        "Keywords": "",
        "FunctionalGroup": "Data Management",
        "Provider": "Children's Services Platform ",
        "Environment": "",
        "Language": "React",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Beta",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "",
        "id": 19
    },
    {
        "ServiceName": "CCDS Web Components",
        "Description": " A web component library that provides UI components for use by the applications developed by Children's Services.",
        "Keywords": "",
        "FunctionalGroup": "Data Management",
        "Provider": "Children's Services Platform ",
        "Environment": "",
        "Language": "",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Beta",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "",
        "id": 20
    },
    {
        "ServiceName": "Stakeholder Registry",
        "Description": "Contains people records (users, learners, schools staff) accessed by Advanced Education.",
        "Keywords": "",
        "FunctionalGroup": "Data Management",
        "Provider": "Advanced Education",
        "Environment": "GoA Network",
        "Language": ".Net",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "Legacy shared service that may not always be suitable for digitally redesigned services.",
        "id": 21
    },
    {
        "ServiceName": "Program and Provider Registry",
        "Description": "Contains programs, providers, specializations, session and cost information of the various private and public school mostly within Alberta.",
        "Keywords": "",
        "FunctionalGroup": "Data Management",
        "Provider": "Advanced Education",
        "Environment": "GoA Network",
        "Language": ".Net",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "Legacy shared service that may not always be suitable for digitally redesigned services.",
        "id": 22
    },
    {
        "ServiceName": "Communication Confirmation Service",
        "Description": "Provides a code which can be used to verify email address and SMS messaging.",
        "Keywords": "email, messaging",
        "FunctionalGroup": "Notifications and Communication",
        "Provider": "Advanced Education",
        "Environment": "GoA Network",
        "Language": ".Net",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "Legacy shared service that may not always be suitable for digitally redesigned services.",
        "id": 23
    },
    {
        "ServiceName": "SMS Gateway",
        "Description": "Gateway for sending text messages.",
        "Keywords": "SMS messages",
        "FunctionalGroup": "Notifications and Communication",
        "Provider": "Advanced Education",
        "Environment": "GoA Network",
        "Language": ".Net",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "Legacy shared service that may not always be suitable for digitally redesigned services.",
        "id": 24
    },
    {
        "ServiceName": "Course Mark Inquiry",
        "Description": "Interfaces to Alberta Education to retrieve transcript information.",
        "Keywords": "API",
        "FunctionalGroup": "Other Function",
        "Provider": "Advanced Education",
        "Environment": "GoA Network",
        "Language": ".Net",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "Legacy shared service that may not always be suitable for digitally redesigned services.",
        "id": 25
    },
    {
        "ServiceName": "Communication Service",
        "Description": "Wrapper over Alberta Notify service and is intended to provide fault tolerance & guaranteed delivery ",
        "Keywords": "messaging",
        "FunctionalGroup": "Notifications and Communication",
        "Provider": "Advanced Education",
        "Environment": "GoA Network",
        "Language": "Typescript",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "",
        "id": 26
    },
    {
        "ServiceName": "Comments Service",
        "Description": "Provides functionality associated to attaching comments to an object for storage and retrieval. ",
        "Keywords": "",
        "FunctionalGroup": "Other Function",
        "Provider": "Advanced Education",
        "Environment": "Container",
        "Language": "Typescript",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "",
        "id": 27
    },
    {
        "ServiceName": "Employment Insurance (EI) Gateway",
        "Description": "An API proxy that consumes Government of Canada employment API endpoints and handles security and API aggregation.",
        "Keywords": "",
        "FunctionalGroup": "Workflow and Process Automation",
        "Provider": "Advanced Education",
        "Environment": "Container",
        "Language": "Typescript",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Beta",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "",
        "id": 28
    },
    {
        "ServiceName": "SIN Validation Service",
        "Description": "Process of batching and sending SIN and tombstone profile information to federal government for match and validation purposes",
        "Keywords": "",
        "FunctionalGroup": "Other Function",
        "Provider": "Advanced Education",
        "Environment": "GoA Network",
        "Language": ".Net",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "Live",
        "Contact": "AE-OCSDSFSAMSTeam@gov.ab.ca",
        "Prerequisites ": "",
        "Comments": "Legacy shared service that may not always be suitable for digitally redesigned services.\n\nUtilization for Federal SIN Service requires business coordinateion and agreements to be put in place. This service is a bit coupled with Student Finance System but is used by Apprenticeship and Studdent Aid (potentially Foundational Learning will be added in the future)",
        "id": 29
    },
    {
        "ServiceName": "1GX API Service",
        "Description": " Interfaces between 1GX and GoA business applications.",
        "Keywords": "",
        "FunctionalGroup": "Workflow and Process Automation",
        "Provider": "Service Integration",
        "Environment": "OpenShift",
        "Language": "C#",
        "SupportLevel": "Hybrid",
        "Documentation": "https://myimtconnect.sp.gov.ab.ca/team/t01/SI/_layouts/15/start.aspx#/Onboarding%20Docs/Forms/AllItems.aspx?RootFolder=%2Fteam%2Ft01%2FSI%2FOnboarding%20Docs%2F1GX%20API%20Service&FolderCTID=0x012000A57A266C215DB3448986F47F9C9DBBD1&View=%7BFDBE63C6%2D00E8%2D4BBF%2D8828%2DC7F534CBA2A6%7D",
        "Status": "Live",
        "Contact": "Advanced request required through BERNIE; select the BERNIE service called '1GX Legacy IMAGIS Integration Service'",
        "Prerequisites ": "",
        "Comments": "Requests for this service will only be accepted by your ministry's 1GX Service Manager through a BERNIE RITM.",
        "id": 30
    },
    {
        "ServiceName": "1GX Legacy IMAGIS Integration",
        "Description": " \n Interfaces between 1GX and GoA business applications using iSuite to send/receive files in legacy IMAGIS format. This integration is for legacy GoA applications, it will be phased out and replaced by direct API type of integration with 1GX.  ",
        "Keywords": "IMAGIS",
        "FunctionalGroup": "Undefined",
        "Provider": "Service Integration",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid",
        "Documentation": "",
        "Status": "",
        "Contact": "Advanced request required through BERNIE; select the BERNIE service called '1GX Legacy IMAGIS Integration Service'",
        "Prerequisites ": "",
        "Comments": "This integration is for legacy GoA applications, it will be phased out and replaced by direct API type of integration with 1GX.  ",
        "id": 31
    },
    {
        "ServiceName": "Address Validation Service",
        "Description": "Allows ease of mailing address data entry and validation through 2 endpoints that allow incremental searches to find the correct address and provide the full address details of the selected result.",
        "Keywords": "eMail",
        "FunctionalGroup": "Undefined",
        "Provider": "Service Integration",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid",
        "Documentation": "https://myimtconnect.sp.gov.ab.ca/team/t01/SI/_layouts/15/DocIdRedir.aspx?ID=M5R3AFZEYQRY-381049226-59",
        "Status": "",
        "Contact": "Advanced request required through the Service Integration SharePoint site; access the 'Service Integration Intake Request' web form",
        "Prerequisites ": "Users will need to submit a Address Validation Service Intake Request to the Service Integration Team via online form submission in the service documentation to request this service.",
        "Comments": "",
        "id": 32
    },
    {
        "ServiceName": "Document Merge Service",
        "Description": "Enables merging of a flat set of named field values with a Microsoft Word Mail   M erge Doc resulting in a merged document in  PDF format.",
        "Keywords": "",
        "FunctionalGroup": "Document Processing",
        "Provider": "Service Integration",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid",
        "Documentation": "",
        "Status": "",
        "Contact": "Advanced request required through the Service Integration SharePoint site; access the 'Service Integration Intake Request' web form",
        "Prerequisites ": "",
        "Comments": "",
        "id": 33
    },
    {
        "ServiceName": "API Gateway as a Service",
        "Description": "Allows enhancement of existing RESTful API services.  Creates an externally accessible URL that is more accessible and not dependant upon traditional Government of Alberta Windows-based authentication. ",
        "Keywords": "API",
        "FunctionalGroup": "Undefined",
        "Provider": "Service Integration",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid",
        "Documentation": "",
        "Status": "",
        "Contact": "Advanced request required through the Service Integration SharePoint site; access the 'Service Integration Intake Request' web form",
        "Prerequisites ": "",
        "Comments": "",
        "id": 34
    },
    {
        "ServiceName": "ECM Connector Service",
        "Description": "Allows basic file management of project-specific content within ECM systems (e.g., file creation, modification, metadata, etc.) like Open Text or others, by request.",
        "Keywords": "",
        "FunctionalGroup": "File Handling and Storage",
        "Provider": "Service Integration",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid",
        "Documentation": "",
        "Status": "",
        "Contact": "Advanced request required through the Service Integration SharePoint site; access the 'Service Integration Intake Request' web form",
        "Prerequisites ": "",
        "Comments": "",
        "id": 35
    },
    {
        "ServiceName": "Electronic Signature - Self-Service User Portal",
        "Description": "Allows the user to access the platform to create and send envelopes, monitor and administer user activity and manage other aspects of the e-signature business process and workflow. ",
        "Keywords": "",
        "FunctionalGroup": "Document Processing",
        "Provider": "Service Integration",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid",
        "Documentation": "https://myimtconnect.sp.gov.ab.ca/team/t01/SI/Service%20Documentation/Electronic%20Signature%20-%20Self-Service%20User%20Portal.aspx",
        "Status": "",
        "Contact": "Advanced request required through BERNIE",
        "Prerequisites ": "",
        "Comments": "",
        "id": 36
    },
    {
        "ServiceName": "Email API Service",
        "Description": "Sends emails to one or many recipients with multiple parameters: To, CC and BCC, ability to specify a FROM recipient, supply a subject line, options for the message body such as HTML, Rich Text or Plain Text, and the sender can attach one or more attachments to the  email.",
        "Keywords": "email",
        "FunctionalGroup": "Notifications and Communication",
        "Provider": "Service Integration",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid",
        "Documentation": "",
        "Status": "",
        "Contact": "Advanced request required through the Service Integration SharePoint site; access the 'Service Integration Intake Request' web form",
        "Prerequisites ": "",
        "Comments": "",
        "id": 37
    },
    {
        "ServiceName": "Payment Gateway Service",
        "Description": "An e-payment service that offers a centralized electronic payment experience. ",
        "Keywords": "",
        "FunctionalGroup": "Payments and Financial Management",
        "Provider": "Service Integration",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid",
        "Documentation": "",
        "Status": "",
        "Contact": "Advanced request required through the Service Integration SharePoint site; access the 'Service Integration Intake Request' web form",
        "Prerequisites ": "",
        "Comments": "",
        "id": 38
    },
    {
        "ServiceName": "QR Code Service",
        "Description": " Provides confirmation of the authenticity of digital and printed documents claimed as issued under the authority of GoA - Government of Alberta. allows the user to create digital signatures in a form of QR (Quick Response) Code images which can then be verified by using this application or the third party solutions, like mobile or desktop custom applications. ",
        "Keywords": "",
        "FunctionalGroup": "Document Processing",
        "Provider": "Service Integration",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid",
        "Documentation": "",
        "Status": "",
        "Contact": "Advanced request required through the Service Integration SharePoint site; access the 'Service Integration Intake Request' web form",
        "Prerequisites ": "",
        "Comments": "",
        "id": 39
    },
    {
        "ServiceName": "Splunk Service",
        "Description": "Provides a holistic view of a service though dashboards, reports and alerts.",
        "Keywords": "",
        "FunctionalGroup": "Service Monitoring and Support",
        "Provider": "Service Integration",
        "Environment": "",
        "Language": "",
        "SupportLevel": "Hybrid",
        "Documentation": "",
        "Status": "",
        "Contact": "Advanced request required through the Service Integration SharePoint site; access the 'Service Integration Intake Request' web form",
        "Prerequisites ": "",
        "Comments": "",
        "id": 40
    },
    {
        "ServiceName": "AB Holidays",
        "Description": "DayJS plugin with information about stat holidays in Alberta",
        "Keywords": "",
        "FunctionalGroup": "Other Function",
        "Provider": "SCSS",
        "Environment": "",
        "Language": "Typescript (dayjs)",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "",
        "Contact": "Privately hosted npm package: https://github.com/GovAlta-EMU/ab-holiday",
        "Prerequisites ": "",
        "Comments": "Instructions and additional information at: https://github.com/GovAlta-EMU/ab-holiday",
        "id": 41
    },
    {
        "ServiceName": "Keycloak client",
        "Description": "Keycloak client for Angular.",
        "Keywords": "",
        "FunctionalGroup": "User Access and Identity",
        "Provider": "SCSS",
        "Environment": "",
        "Language": "Angular",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "",
        "Contact": "Privately hosted npm package: https://github.com/GovAlta-EMU/keycloak-auth-service",
        "Prerequisites ": "",
        "Comments": "Instructions and additional information at: https://github.com/GovAlta-EMU/keycloak-auth-service",
        "id": 42
    },
    {
        "ServiceName": "SCSS Angular components",
        "Description": "Common UI components",
        "Keywords": "",
        "FunctionalGroup": "Other Function",
        "Provider": "SCSS",
        "Environment": "",
        "Language": "Angular",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "Inspiration could be taken for the design library, not for use and being internally deprecated inside SCSS",
        "id": 43
    },
    {
        "ServiceName": "Notifications",
        "Description": "Provides a message bus interface to AB Notify",
        "Keywords": "messaging",
        "FunctionalGroup": "Notifications and Communication",
        "Provider": "SCSS",
        "Environment": "GOA Network",
        "Language": "Typescript",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "",
        "id": 44
    },
    {
        "ServiceName": "User survey",
        "Description": "Module to define release announcements and survey prompts for users and track their responses (Dismissed,postponed,acknowledged)",
        "Keywords": "messaging",
        "FunctionalGroup": "Notifications and Communication",
        "Provider": "SCSS",
        "Environment": "",
        "Language": "Typescript",
        "SupportLevel": "",
        "Documentation": "",
        "Status": "",
        "Contact": "",
        "Prerequisites ": "",
        "Comments": "This is a shared code module which teams deploy independently.  Work is planned to make a microservice deployment.  Actual survey results are stored in external system (ms forms), this only tracks if the user opened the survey.",
        "id": 45
    }
]